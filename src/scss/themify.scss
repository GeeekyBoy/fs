@use "sass:map";
@use "sass:color";

@function construct-theme($variant) {
  @return (
    "light": (
      "primary": $variant, // Y7K Blue
      "primaryDark": color.scale($variant, $lightness: -10%),
      "primaryLight": color.scale($variant, $lightness: 80%),
      "txtColor": color.scale($variant, $lightness: -45%),
      "primaryBg": color.scale($variant, $lightness: 95%),
      "secondaryBg": color.scale($variant, $lightness: 90%),
      "fieldBg": color.scale($variant, $lightness: 99%)
    ),
    "dark": (
      "primary": $variant, // Y7K Blue
      "primaryDark": color.scale($variant, $lightness: -10%),
      "primaryLight": color.scale($variant, $lightness: 80%),
      "txtColor": #FFFFFF,
      "primaryBg": #1F1F1F,
      "secondaryBg": #282A2D,
      "fieldBg": #444746
    )
  )
}

$themes: (
  "red": construct-theme(#FB1515),
  "rose": construct-theme(#FF969C),
  "orange": construct-theme(#FE6000),
  "green": construct-theme(#15fb3b),
  "turquoise": construct-theme(#15fbd9),
  "cyan": construct-theme(#15dcfb),
  "blue": construct-theme(#1560FB),
  "pink": construct-theme(#fb15b2),
  "purple": construct-theme(#5615fb),
  "black": construct-theme(#000000),
);

@function if-important($important){
  @return #{if($important, '!important', '')};
}

@mixin themify($property, $value, $important: false) {
  #{$property}: map.get($themes, "rose", "light", $value) if-important($important);
  html:global(.dark) & {
    #{$property}: map.get($themes, "rose", "dark", $value) if-important($important);
  }
}

@mixin themify-global($property, $value, $important: false) {
  #{$property}: map.get($themes, "rose", "light", $value) if-important($important);
  html.dark & {
    #{$property}: map.get($themes, "rose", "dark", $value) if-important($important);
  }
}