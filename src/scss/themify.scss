@use "sass:map";
@use "sass:color";

@function construct-theme($variant, $onPrimaryColor) {
  @return (
    "light": (
      "primary": $variant,
      "primaryDark": color.scale($variant, $lightness: -10%),
      "primaryLight": color.scale($variant, $lightness: 80%),
      "primaryLightSurface": color.scale($variant, $lightness: 80%),
      "onPrimaryColor": $onPrimaryColor,
      "txtColor": color.scale($variant, $lightness: -80%),
      "primaryBg": color.scale($variant, $lightness: 95%),
      "secondaryBg": color.scale($variant, $lightness: 90%),
      "fieldBg": color.scale($variant, $lightness: 99%),
      "outline": #79747E,
      "hover": #F5F5F5
    ),
    "dark": (
      "primary": color.scale($variant, $lightness: 70%),
      "primaryDark": color.scale($variant, $lightness: 20%),
      "primaryLight": color.scale($variant, $lightness: 80%),
      "primaryLightSurface": #444746,
      "onPrimaryColor": color.scale($variant, $lightness: -60%),
      "txtColor": #FFFFFF,
      "primaryBg": #1F1F1F,
      "secondaryBg": #282A2D,
      "fieldBg": #444746,
      "outline": #938F99,
      "hover": #444746
    )
  )
}

$themes: (
  "red": construct-theme(#C10000, #FFFFFF),
  "rose": construct-theme(#9C4149, #FFFFFF),
  "orange": construct-theme(#A73B00, #FFFFFF),
  "green": construct-theme(#006E0A, #FFFFFF),
  "turquoise": construct-theme(#006B5A, #FFFFFF),
  "cyan": construct-theme(#006879, #FFFFFF),
  "blue": construct-theme(#0050E4, #FFFFFF),
  "pink": construct-theme(#B4007C, #FFFFFF),
  "purple": construct-theme(#5F2AFF, #FFFFFF),
  "black": construct-theme(#000000, #FFFFFF),
);

@function if-important($important){
  @return #{if($important, '!important', '')};
}

@mixin themify($property, $value, $important: false) {
  @each $themeName, $theme in $themes {
    html:global(.#{$themeName}) & {
      #{$property}: map.get($theme, "light", $value) if-important($important);
    }
    html:global(.#{$themeName}.dark) & {
      #{$property}: map.get($theme, "dark", $value) if-important($important);
    }
  }
}

@mixin themify-global($property, $value, $important: false) {
  @each $themeName, $theme in $themes {
    html.#{$themeName} & {
      #{$property}: map.get($theme, "light", $value) if-important($important);
    }
    html.#{$themeName}.dark & {
      #{$property}: map.get($theme, "dark", $value) if-important($important);
    }
  }
}